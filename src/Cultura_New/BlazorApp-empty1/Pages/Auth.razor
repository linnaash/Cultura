@page "/auth"
@inject HttpClient Http // Для отправки запросов на @* сервер *@
@inject IJSRuntime JSRuntime // Для работы с localStorage
@inject NavigationManager Navigation // Для навигации на другие @* страницы *@
@using System.ComponentModel.DataAnnotations @* // Для проверки данных формы *@

<div>
    <label for="email">Логин:</label>
    <input id="email" type="text" placeholder="Введите логин" @bind="authenticateRequest.Email" />
</div>
<div>
    <label for="password">Пароль:</label>
    <input id="password" type="password" placeholder="Введите пароль" @bind="authenticateRequest.Password" />
</div>
<button @onclick="HandleLogin">Войти</button>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}

@code {
    // Модель для ввода данных
    private AuthenticateRequest authenticateRequest = new AuthenticateRequest();
    private string errorMessage; // Для показа ошибок

    // Метод для отправки данных на сервер
    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/Accounts/Authenticate", authenticateRequest);

            if (response.IsSuccessStatusCode)
            {
                // Успешный вход
                var authResponse = await response.Content.ReadFromJsonAsync<AuthenticateResponse>();
                Console.WriteLine($"JWT: {authResponse.JwtToken}"); // Просто вывод для проверки

                // Сохраняем токен в localStorage
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", authResponse.JwtToken);

                // Переходим на другую страницу
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Неправильный логин или пароль.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Ошибка: {ex.Message}";
        }
    }

    // Вспомогательные классы
    public class AuthenticateRequest
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        public string Password { get; set; }
    }

    public class AuthenticateResponse
    {
        public string JwtToken { get; set; }
    }
}
